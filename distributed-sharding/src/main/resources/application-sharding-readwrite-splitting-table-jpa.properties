# ============================== \u6570\u636E\u6E90\u914D\u7F6E ==============================
# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=write-ds-0,write-ds-0-read-0

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.write-ds-0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.write-ds-0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.write-ds-0.jdbc-url=jdbc:mysql://repo.emon.vip:3307/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.write-ds-0.username=root
spring.shardingsphere.datasource.write-ds-0.password=root123

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.write-ds-0-read-0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.write-ds-0-read-0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.write-ds-0-read-0.jdbc-url=jdbc:mysql://repo.emon.vip:3308/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.write-ds-0-read-0.username=root
spring.shardingsphere.datasource.write-ds-0-read-0.password=root123



# ============================== \u8BFB\u5199\u5206\u79BB\u914D\u7F6E ==============================
# \u914D\u7F6E\u8BFB\u5199\u5206\u79BB\u6620\u5C04\u6E90
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds0.write-data-source-name=write-ds-0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds0.read-data-source-names=write-ds-0-read-0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ds0.load-balancer-name= round_robin

# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round_robin.type= ROUND_ROBIN



# ============================== \u5206\u8868\u914D\u7F6E ==============================
# \u914D\u7F6E t_order \u8868\u89C4\u5219
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds0.t_order_$->{0..1}

# \u914D\u7F6E\u5206\u8868\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline

# \u914D\u7F6E\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithm-expression=t_order_$->{order_id % 2}

# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
#spring.shardingsphere.rules.sharding.key-generators.snowflake.type=CUSTOM_SNOWFLAKE


# ============================== \u5176\u4ED6\u914D\u7F6E ==============================
spring.shardingsphere.props.sql-show=true


